ArsesTennisRobot - Complete User & Admin Guide (V3.0.4)

This guide provides a comprehensive overview of how to set up, manage, and use the ArsesTennisRobot.

Part 1: Admin Guide & Server Setup

This section covers the one-time setup on your server and how to use the admin-specific features.

1.1. Initial Server Setup (cPanel Host)

Your bot is a "polling" bot, which means it needs to run continuously, 24/7. This guide explains how to achieve this on a standard cPanel host like PythonHost.ir.

Step 1: Deploy Code from GitHub

In cPanel, go to Git™ Version Control.

Click Create and clone your repository using its HTTPS URL (e.g., https://github.com/Navideft74/ArsesTennis_telegram_bot.git).

Set the Repository Path to a folder name like ArsesTennis_telegram_bot.

Step 2: Create the Python Environment (The Right Way)

In cPanel, go to Setup Python App.

Click Create Application.

Set the Application root to the same folder name you used above (ArsesTennis_telegram_bot). Leave the URL blank. Click Create.

The page will refresh. Find and copy the source command shown on the screen. It will look like: source /home/youruser/virtualenv/ArsesTennis_telegram_bot/3.9/bin/activate.

Step 3: Install and Configure in the Terminal

In cPanel, open the Terminal.

Activate the environment by pasting the source command you just copied. Your prompt should now start with (ArsesTennis_telegram_bot).

Navigate into your project folder: cd ~/ArsesTennis_telegram_bot

Install all required libraries: pip install -r requirements.txt

Create the environment file: nano .env

Step 4: Configure the .env file
This file stores all your secrets. Paste the following into the nano editor, replacing the placeholder values with your real data.

# Your bot token from @BotFather
TELEGRAM_BOT_TOKEN='12345:ABCDEFGHIJKL...'

# A comma-separated list of Telegram User IDs for admins
# To find your ID, message @userinfobot
ADMIN_IDS='12345678,98765432'

# (Optional) The file_id for your promotional video
GROUP_VIDEO_FILE_ID='BAACAgIAAxkBAAIEAmY...'


Press Ctrl+X, then Y, then Enter to save and exit.

Step 5: Create the Self-Healing Cron Job
This is the most critical step to keep your bot running.

In cPanel, go to Cron Jobs.

Under "Common Settings", choose "Once Per Five Minutes".

In the "Command" box, paste the following command. Remember to replace ncgyhcay with your actual cPanel username.

/usr/bin/flock -n /home/ncgyhcay/ArsesTennis_telegram_bot/bot.lock -c 'cd /home/ncgyhcay/ArsesTennis_telegram_bot && source /home/ncgyhcay/virtualenv/ArsesTennis_telegram_bot/3.9/bin/activate && python tennis_bot.py >> bot.log 2>&1'


Click "Add New Cron Job".

Your bot is now deployed and will run continuously, automatically restarting if it ever crashes.

1.2. Adding the Sticky Promotional Video

To make your group welcome message more engaging, you can attach a video.

Get the file_id:

In a private chat with your bot, send it the video file you want to use.

Immediately forward that video message to another bot called @JsonDumpBot.

@JsonDumpBot will reply with technical data. Find the video section and copy the long string of characters from the "file_id" field.

Add to .env file:

In the cPanel Terminal, navigate to your project folder and open the .env file with nano .env.

Add the GROUP_VIDEO_FILE_ID line from Step 4 above, pasting the file_id you copied.

Restart the Bot: To make the bot read the new setting, you need to restart it. The easiest way is to find and kill the running python process, and the cron job will restart it within 5 minutes.

In the Terminal, type ps aux | grep tennis_bot.py. Find the Process ID (PID).

Type kill <PID> to stop it.

1.3. Managing the Bot in a Group

Initial Setup:

Add your bot to your Telegram group.

Promote the bot to an Admin. It is essential that you give it the "Delete Messages" permission. The bot needs this to delete the /setupgroup command after you use it.

Type /setupgroup in the group. The bot will post two messages:

A welcome message (with your video if you configured it).

A schedule message that lists the timeslots.

Pin the welcome message to the top of the group for all members to see.

Functionality:

The schedule message will now update itself automatically every 5 minutes.

The button on the welcome message, "بروزرسانی دستی (فقط ادمین)", allows you to force an immediate update without waiting for the 5-minute cycle.

1.4. Private Admin Commands (Your Control Panel)

You can manage your bot by sending it these commands in a private chat. Only the User IDs listed in your ADMIN_IDS environment variable can use them.

/status

Shows you how many groups the bot is currently active in (i.e., in how many groups /setupgroup has been successfully run).

/stats

Displays usage statistics, including how many times the schedule has been updated automatically and how many times an admin has manually updated it.

/broadcast <your message here>

Sends a message to every active group the bot is a part of. This is perfect for announcements.

Example: /broadcast The courts will be closed tomorrow for maintenance.

Part 2: Regular User Guide

2.1. In the Group

The bot's main purpose is to provide an always-up-to-date schedule.

The timeslot message automatically refreshes every 5 minutes. You can see the "آخرین آپدیت" time at the top of the message.

There is no need for regular users to do anything. They can simply view the message to see the current status of reservations.

2.2. In a Private Chat

Any user can have a private conversation with the bot for quick checks.

Send the /start command to begin.

The bot will provide two buttons: "امروز" (Today) and "فردا" (Tomorrow) for one-click schedule checks.

You can also manually type a date in the format YYYY-MM-DD (e.g., 2025-10-25) to get the schedule for any specific day.